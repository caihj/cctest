<?xml version="1.0" encoding="UTF-8"?>
<beans xmlns="http://www.springframework.org/schema/beans"
	xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" xmlns:context="http://www.springframework.org/schema/context"
	xmlns:mvc="http://www.springframework.org/schema/mvc" xmlns:p="http://www.springframework.org/schema/p"
	xsi:schemaLocation="http://www.springframework.org/schema/mvc http://www.springframework.org/schema/mvc/spring-mvc-4.0.xsd
		http://www.springframework.org/schema/beans http://www.springframework.org/schema/beans/spring-beans-4.0.xsd
		http://www.springframework.org/schema/context http://www.springframework.org/schema/context/spring-context-4.0.xsd"
	default-lazy-init="false">


	<!-- 连接池属性 -->
	<bean id="jedisPoolConfig" class="redis.clients.jedis.JedisPoolConfig">
		<property name="maxTotal" value="200" />
		<property name="maxIdle" value="30" />
		<property name="maxWaitMillis" value="30000" />
		<property name="testOnBorrow" value="false" />
		<property name="testOnReturn" value="true" />
	</bean>

	<!-- 集群 -->
	<bean id="redisSentinel"
		class="com.pay1pay.framework.cache.nosql.redis.Pay1PaySentinelConfig">
		<property name="masterName" value="${redis.masterName}" />
		<!--sentinel 实例的地址端口不同实例用分号隔开 -->
		<property name="sentinelAddrs" value="${redis.addresses}" />
	</bean>

	<!-- 工厂类 -->
	<bean id="jedisConnectionFactory"
		class="org.springframework.data.redis.connection.jedis.JedisConnectionFactory"
		destroy-method="destroy">
		<constructor-arg index="0" ref="redisSentinel" />
		<constructor-arg index="1" ref="jedisPoolConfig" />
	</bean>


	<!-- redis模板 -->
	<bean id="redisTemplate" class="org.springframework.data.redis.core.RedisTemplate">
		<property name="connectionFactory" ref="jedisConnectionFactory" />
		<property name="keySerializer">
			<bean
				class="org.springframework.data.redis.serializer.StringRedisSerializer" />
		</property>
		<property name="hashKeySerializer">
			<bean
				class="org.springframework.data.redis.serializer.StringRedisSerializer" />
		</property>
		<property name="valueSerializer">
			<bean id="redisJdkSerializer"
				class=" org.springframework.data.redis.serializer.JdkSerializationRedisSerializer">
			</bean>
		</property>
		<property name="hashValueSerializer">
			<bean id="redisJdkSerializer"
				class=" org.springframework.data.redis.serializer.JdkSerializationRedisSerializer">
			</bean>
		</property>

	</bean>

	<!-- redis template definition -->
	<bean id="sessionReidsTemplate" class="org.springframework.data.redis.core.RedisTemplate"
		p:connection-factory-ref="jedisConnectionFactory">
		<property name="valueSerializer" ref="jackson2RedisSerializer"></property>
	</bean>

	<bean id="jackson2RedisSerializer" class="com.pay1pay.framework.session.HessianRedisSerializer" />

</beans>
